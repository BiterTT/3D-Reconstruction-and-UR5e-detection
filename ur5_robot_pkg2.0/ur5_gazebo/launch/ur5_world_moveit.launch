<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  

  <arg name="initial_joint_positions" default=" -J elbow_joint -1.5707 -J robotiq_85_left_knuckle_joint 0.1 -J shoulder_lift_joint -1.5707 -J shoulder_pan_joint 0 -J wrist_1_joint 1.5707 -J wrist_2_joint 1.5707 -J wrist_3_joint 0" doc="Initial joint configuration of the robot"/>
  
  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" textfile="$(find ur5_test_config)/config/gazebo_ur5.urdf" />

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <param name="spawn_robot_delay" value="5.0" />
  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model ur5 $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Spawn Asphalt Plane in Gazebo -->
  <node name="spawn_asphalt_plane" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-sdf -file /home/robot/.gazebo/models/asphalt_plane/model.sdf -model asphalt_plane -x 0 -y 0 -z 0.05"/>

  <node name="spawn_coke_can" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-sdf -file /home/robot/.gazebo/models/coke_can/model.sdf -model coke_can -x 0.65 -y 0.1 -z 0.05 -R -1.5746 -P 0.0 -Y 1.5746
"/>

  <param name="controller_start_delay" value="3.0" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find ur5_test_config)/config/ur5_control_moveit.yaml" command="load"/>

  <!--<include file="$(dirname)/ros_controllers.launch"/>-->
  <param name="controller_start_delay" value="3.0"/>

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner"
      respawn="false" output="screen"
      ns="ur5"
      args="joint_state_controller ur5_arm_controller gripper_controller" />

  <!-- <group ns="ur5">
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group> -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/joint_states" to="/ur5/joint_states"/>
  </node>

  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <rosparam param="source_list">[/ur5/joint_states]</rosparam>
  </node> -->

  <!-- Wait for Gazebo to start, then load and start controllers -->

  <!-- Given the published joint states, publish tf for the robot links -->
  <!--<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />-->
  <!--only python to open, moveit no!!!!-->
  

</launch>
